Create a database called 'my_first_db'.:
use my_first_db
switched to db my_first_db

Create students collection.:
 db.createCollection('students')
{ "ok" : 1 }

Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})
Create 5 students with the appropriate info.:
> db.students.insert({name:"daryl", home_state:"CA", lucky_number: 6, birthday:{month: 4, day: 11, year:1994}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name:"daryl1", home_state:"CA", lucky_number: 6, birthday:{month: 4, day: 11, year:1994}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name:"daryl2", home_state:"CA", lucky_number: 7, birthday:{month: 4, day: 11, year:1994}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name:"daryl3", home_state:"WA", lucky_number: 7, birthday:{month: 4, day: 11, year:1994}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name:"daryl4", home_state:"WA", lucky_number: 8, birthday:{month: 4, day: 11, year:1994}})
WriteResult({ "nInserted" : 1 })


Get all students.:
> db.students.find()
{ "_id" : ObjectId("5d76b8a210dda83dc706fb5d"), "name" : "daryl", "home_state" : "CA", "lucky_number" : 6, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }
{ "_id" : ObjectId("5d76b8af10dda83dc706fb5e"), "name" : "daryl1", "home_state" : "CA", "lucky_number" : 6, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }
{ "_id" : ObjectId("5d76b8bd10dda83dc706fb5f"), "name" : "daryl2", "home_state" : "CA", "lucky_number" : 7, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }
{ "_id" : ObjectId("5d76b8cc10dda83dc706fb60"), "name" : "daryl3", "home_state" : "WA", "lucky_number" : 7, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }
{ "_id" : ObjectId("5d76b8d910dda83dc706fb61"), "name" : "daryl4", "home_state" : "WA", "lucky_number" : 8, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }

Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).:
db.students.find({$or:[{home_state:"CA"}, {home_state:"WA"}]})
{ "_id" : ObjectId("5d76b8a210dda83dc706fb5d"), "name" : "daryl", "home_state" : "CA", "lucky_number" : 6, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }
{ "_id" : ObjectId("5d76b8af10dda83dc706fb5e"), "name" : "daryl1", "home_state" : "CA", "lucky_number" : 6, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }
{ "_id" : ObjectId("5d76b8bd10dda83dc706fb5f"), "name" : "daryl2", "home_state" : "CA", "lucky_number" : 7, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }
{ "_id" : ObjectId("5d76b8cc10dda83dc706fb60"), "name" : "daryl3", "home_state" : "WA", "lucky_number" : 7, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }
{ "_id" : ObjectId("5d76b8d910dda83dc706fb61"), "name" : "daryl4", "home_state" : "WA", "lucky_number" : 8, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }



Get all students whose lucky number is:
greater than 3:
db.students.find({lucky_number:{$gt:3}})
{ "_id" : ObjectId("5d76b8a210dda83dc706fb5d"), "name" : "daryl", "home_state" : "CA", "lucky_number" : 6, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }
{ "_id" : ObjectId("5d76b8af10dda83dc706fb5e"), "name" : "daryl1", "home_state" : "CA", "lucky_number" : 6, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }

less than or equal to 10:
db.students.find({lucky_number:{$lte:10}})
{ "_id" : ObjectId("5d76b8a210dda83dc706fb5d"), "name" : "daryl", "home_state" : "CA", "lucky_number" : 6, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }
{ "_id" : ObjectId("5d76b8af10dda83dc706fb5e"), "name" : "daryl1", "home_state" : "CA", "lucky_number" : 6, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }

between 1 and 9 (inclusive):
db.students.find({lucky_number:{$gt:1,$lt:10}})
{ "_id" : ObjectId("5d76b8a210dda83dc706fb5d"), "name" : "daryl", "home_state" : "CA", "lucky_number" : 6, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }
{ "_id" : ObjectId("5d76b8af10dda83dc706fb5e"), "name" : "daryl1", "home_state" : "CA", "lucky_number" : 6, "birthday" : { "month" : 4, "day" : 11, "year" : 1994 } }

Add a field to each student collection called 'interests' that is an ARRAY.  It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.:
 db.students.update({},{$set:{interests:['coding', 'brunch', 'MongoDB']}},{upsert:true,multi:true})
WriteResult({ "nMatched" : 5, "nUpserted" : 0, "nModified" : 5 })

Add some unique interests for each particular student into each of their interest arrays.
 db.students.update({name:"daryl1"},{$push:{interests:'eating'}})


Add the interest 'taxes' into someone's interest array.:
db.students.update({name:"daryl1"},{$push:{interests:'taxes'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

Remove the 'taxes' interest you just added.:
db.students.update({name:"daryl1"},{$pull:{interests:'taxes'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

Remove all students who are from California.:
 db.students.remove({home_state:"CA"})

Remove a student by name. :
 db.students.remove({name:"daryl4"})

Remove a student whose lucky number is greater than 5 (JUST ONE):
 db.students.remove({lucky_number:{$gt:5}},1)


Add a field to each student collection called 'number_of_belts' and set it to 0.:
db.students.update({},{$set:{number_of_belts:0}},{upsert:true, multi: true})

Increment this field by 1 for all students in Washington (Seattle Dojo).:
db.students.update({},{$inc:{number_of_belts:1}},{upsert:true, multi: true})

Rename the 'number_of_belts' field to 'belts_earned':
db.students.update({},{$rename:{number_of_belts:'belts_earned'}},{upsert:true, multi: true})

Remove the 'lucky_number' field.:
 db.students.update({},{$unset:{lucky_number:""}},{upsert:true, multi: true})

Add a 'updated_on' field, and set the value as the current date.:
 db.students.update( {}, { "$set": { updated_on: new Date() }}, {upsert:true,multi:true})

